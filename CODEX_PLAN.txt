# CODEX_PLAN

## 🚦 Guardrails
- ❗ DB/테이블 삭제 금지: Room 스키마 변경은 반드시 Migration으로만 처리
- ❗ 버전 고정:
  - AGP = 8.6.1
  - Gradle Wrapper = 8.7
  - Kotlin = 2.0.20
  - KSP = 2.0.20-1.0.25
  - Compose BOM = 2024.09.00
  - Room = 2.6.1
- ❗ Secrets 금지: API 키, OAuth Client Secret 등은 절대 커밋 금지. placeholder(`YOUR_KEY_HERE`)만 사용
- ❗ OpenAI API 키는 사용자가 직접 입력 → Android Keystore + EncryptedSharedPreferences 로 안전 저장
- ❗ 작업 순서는 직렬로 진행. 이전 단계 PR merge 후 다음 단계 착수

---

## 🛤 단계별 개발 순서
1. `feat/init-db`
   - Room 엔티티, DAO, Database 구현
   - ingest_items + auth_tokens 테이블, FTS5 인덱스 포함
   - 기본 CRUD + FTS smoke test

2. `feat/auth-google`
   - Google Sign-In (Play Services Auth)
   - serverAuthCode → 백엔드 교환 (placeholder)
   - access/refresh token 안전 저장 (Keystore + Room)

3. `feat/gmail-ingest`
   - Gmail API (gmail.readonly) → 메일 수집
   - IngestItem upsert
   - 토큰 만료 시 refresh/재로그인 처리

4. `feat/parser-v1`
   - Text → dueDate, confidence 추출
   - TimeResolver(Asia/Seoul) 적용

5. `feat/widget`
   - Glance 위젯 → 오늘/주/월 항목 요약 표시

6. `feat/openai-chat`
   - OpenAI API Key 입력 + 안전 저장
   - Hybrid Search = RDB 필터 + FTS5 + (옵션) 벡터 유사도 → Rank Fusion
   - PromptBuilder + OpenAI Chat Completions 호출

7. `feat/ocr-capture` (선택)
   - ML Kit OCR → ingest_items(source="ocr") 추가

---

## ✅ Definition of Done (공통)
- 새 브랜치 생성 → Gradle Sync & 빌드 성공
- 단위/수동 테스트 통과
- README 업데이트 (사용법, 권한, 한계, 스크린샷)
- PR 생성 시 `.github/pull_request_template.md` 준수
- DB 구조 파괴적 변경 없음
